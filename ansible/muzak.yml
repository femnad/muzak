---
- hosts: localhost
  name: Cleanup local known hosts
  vars_files:
    - secret.yml

  tasks:
    - name: Ensure SSH-ability
      command:
        cmd: pressh {{ muzak_hoster }}

- hosts: muzak
  become: true

  handlers:
    - name: caddy-pause
      ansible.builtin.pause:
        seconds: 20

  vars:
    caddy_version: 2.7.5
    caddyfile: /etc/caddy/Caddyfile
    data_folder: /mnt/navidrome
    gcsfuse_version: 1.2.0
    music_folder: /mnt/music
    navidrome_version: 0.49.3
    services_dir: /etc/systemd/system

  vars_files:
    - secret.yml

  tasks:
    - name: Install fuse
      ansible.builtin.package:
        name:
          - fuse

    - name: Install gcsfuse
      ansible.builtin.apt:
        deb: https://github.com/GoogleCloudPlatform/gcsfuse/releases/download/v{{ gcsfuse_version }}/gcsfuse_{{ gcsfuse_version }}_amd64.deb

    - name: Ensure music folder
      ansible.builtin.file:
        path: '{{ music_folder }}'
        state: directory

    # Allows having the same users across different instances.
    - name: Mount attached disk
      ansible.builtin.mount:
        path: /mnt/navidrome
        src: /dev/disk/by-id/google-navidrome
        state: mounted
        fstype: ext4

    - name: Template gcsfuse service
      ansible.builtin.template:
        src: service.j2
        dest: '{{ services_dir }}/gcsfuse.service'
      vars:
        description: A user-space file system for interacting with Google Cloud Storage
        exec: '/usr/bin/gcsfuse --foreground --implicit-dirs {{ bucket }} {{ music_folder }}'

    - name: Start gcsfuse service
      ansible.builtin.systemd:
        name: gcsfuse
        state: started
        daemon_reload: true

    - name: Download Navidrome
      ansible.builtin.unarchive:
        src: https://github.com/navidrome/navidrome/releases/download/v{{ navidrome_version }}/navidrome_{{ navidrome_version }}_Linux_x86_64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        include: navidrome

    - name: Template Navidrome service
      ansible.builtin.template:
        src: service.j2
        dest: '{{ services_dir}}/navidrome.service'
      vars:
        description: Modern Music Server and Streamer compatible with Subsonic/Airsonic
        exec: /usr/local/bin/navidrome --datafolder {{ data_folder }} --musicfolder {{ music_folder }}

    - name: Start Navidrome service
      ansible.builtin.systemd:
        name: navidrome
        state: started
        daemon_reload: true

    - name: Download Caddy
      ansible.builtin.unarchive:
        src: https://github.com/caddyserver/caddy/releases/download/v{{ caddy_version }}/caddy_{{ caddy_version }}_linux_amd64.tar.gz
        dest: /usr/local/bin
        remote_src: true
        include: caddy

    - name: Ensure Caddyfile dir
      file:
        path: '{{ caddyfile | dirname }}'
        state: directory

    - name: Write Caddyfile
      template:
        src: Caddyfile
        dest: '{{ caddyfile }}'

    - name: Template Caddy service
      template:
        src: service.j2
        dest: /etc/systemd/system/caddy.service
      vars:
        description: Fast, multi-platform web server with automatic HTTPS
        exec: /usr/local/bin/caddy run --config {{ caddyfile }}
        env:
          - HOME: /caddy

    - name: Start Caddy service
      systemd:
        name: caddy
        state: started
        daemon_reload: true
        enabled: true
      notify: caddy-pause
...
